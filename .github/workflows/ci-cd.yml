name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Unit Tests
        run: |
          echo "Running unit tests..."
          pip install pytest
          pytest tests/ || exit 0

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, staging, prod]
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          echo "Building image for ${{ matrix.env }}..."
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ci-cd-demo:${{ matrix.env }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/ci-cd-demo:${{ matrix.env }} ${{ secrets.DOCKER_USERNAME }}/ci-cd-demo:previous || true
          docker push ${{ secrets.DOCKER_USERNAME }}/ci-cd-demo:${{ matrix.env }}

      - name: Deploy Container & Smoke Test
        run: |
          # Map environment to host port
          if [ "${{ matrix.env }}" = "dev" ]; then
            HOST_PORT=5001
          elif [ "${{ matrix.env }}" = "staging" ]; then
            HOST_PORT=5002
          else
            HOST_PORT=5003
          fi

          CONTAINER_PORT=5000

          echo "Deploying ${{ matrix.env }} on host port $HOST_PORT -> container port $CONTAINER_PORT"

          # Stop & remove previous container
          docker stop ${{ matrix.env }} || true
          docker rm ${{ matrix.env }} || true

          # Run new container
          docker run -d -p $HOST_PORT:$CONTAINER_PORT -e APP_PORT=$CONTAINER_PORT --name ${{ matrix.env }} \
            ${{ secrets.DOCKER_USERNAME }}/ci-cd-demo:${{ matrix.env }}

          # Wait a few seconds for container to start
          sleep 5

          # Smoke test from host
          echo "Testing ${{ matrix.env }} environment..."
          if ! curl -f http://localhost:$HOST_PORT; then
            echo "Deployment failed, rolling back..."
            docker stop ${{ matrix.env }} || true
            docker rm ${{ matrix.env }} || true
            docker run -d -p $HOST_PORT:$CONTAINER_PORT -e APP_PORT=$CONTAINER_PORT --name ${{ matrix.env }} \
              ${{ secrets.DOCKER_USERNAME }}/ci-cd-demo:previous
            exit 1
          fi

